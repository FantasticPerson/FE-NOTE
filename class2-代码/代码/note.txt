Vue.js：
let/const、箭头函数、块级作用域、promise、module


我们默认的全局变量都是在window对象下的，如果this对象是window，那么他绑定下的所有变量都是全局变量


回调地狱:嵌套太深，导致无法维护，根本没法去看，阅读性太难


Promise：
必须在方法体内返回一个Promise的实例，然后得到两个参数，一个叫resolve（成功），一个叫reject（失败）
特点：
1、执行是按照我们指定的顺序执行的
2、执行时间太长，太死板


Promise.all：
特点
1、执行顺序是按照方法本身的时间/效率来执行的
2、执行时间短，灵活

console.time和console.timeEnd是一对，可以得到一个相对的执行时间，里面传入的名字需要统一，但是注意这个只是我们用来测试的一个小手段


async：（ES7）
async/await是一对黄金搭档，必须一起用，还是基于Promise的
特点：
1、保证的是代码的可读性以及代码的顺序性
2、使我们的阅读逻辑更加清晰

基本规则
1、async表示这是一个异步函数，await只能应用在这个async函数里面
2、await表示在这里，会等待Promise返回结果之后再继续执行
3、await后面跟着的应该是一个Promise对象，但是如果不是，也就是返回其他值的情况下，代码不会出现错误，但是也不会出现代码同步的效果了
4、await必须在async函数的上下文当中

提示：
await等待的虽然是Promise对象，但是async语法不需要写.then这种语法，可以直接得到返回值

try catch：
try catch是用于捕捉异常，try：是正常时候的代码，catch是报错之后需要执行的代码

















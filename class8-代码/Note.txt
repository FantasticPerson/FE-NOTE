有基础、想学习源码，往架构方面走？

面试、装B、学习一些新的东西

为什么学习源码？
我们不知道怎么写？
我们想知道人家怎么写的，然后通过学习人家的来加深自己的技术与认知

级别：积累与沉淀、是我们自己所经历的和所花的时间

懒是人类前进的动力！
代码能不能偷点懒，久而久之的积累，摸索代码的复用

1、要知道怎么写？
2、需要注意哪些？
3、多测试！（在开发途中就会有很多问题暴露，一个框架的健壮性需要长期的打磨）

性能
    避免全局查找
    熟悉代码的一些技巧
        字符串拼接，少用+=
        document.createElement,DOM是最耗性能的
        频繁创建的时候可以使用DocumentFragment
        clone替代createElement
        for(......){
            var div = document.createElement("div")//
            var div2 = div.clone()
        }
        优化循环
    代码的优化：降低耦合（高内聚、低耦合）
    阅读的优化：

效率




vue-router.js和vue的源码不同
vue-router.js文件是打包后，也就是现在ES5版本

src：源码文件夹
node_modules：安装依赖的文件夹




注意：我们学习源码，不是有问题就第一时间去修改源码，
万一改动了，建议用word文档，截图和文字记录下修改之前和修改之后的位置和信息，或者说保存N个版本

原因：
1、破坏了原来的框架
2、后期的升级迭代尤为困难
3、假如你走了？假如新来的人迭代了vue
    所以我们在开发的时候，如果需要增加功能，一定是以拓展/插件的形式来开发

从这个关键的第三个看，我们写框架，一定要考虑后期的用户拓展，所以vue给了用户很多的可选性
指令：自定义
组件：自定义。。。。


凡是要用户传入参数的，都要考虑到他可能没有传参







读源码：
1、先知道怎么使用，然后从他的入口走进去，看他是如何解析和操作/绑定











Vue基础、进阶、高级部分，我们开发都是基于逻辑（业务分析）

原理、源码、架构方向


Router：路由原理
Vuex：状态管理原理

学习源码，是让我们在用到的时候能够很淡定的去做和开发，也方便我们自己对框架及以后学习的理解


组件：
什么是组件：
可以理解为一段代码块，组件可以拓展HTML元素，封装可重用的代码，在较高层面上，组件是自定义的元素，简而言之，就是一个可重用的代码块(一般情况下不重用的话，我们也不会去频繁的封装)


组件通信的理由：
就拿我们在公司上班一样，你是做Java的，我是做前端的，一旦我们需要做项目，就需要相互沟通和交流，从程序的角度，我们需要建立一个沟通的机制(桥梁)，当然我们后期如果使用vuex的话，会大范围的减少这种通信

为什么用组件：
1、简化代码
2、简化了维护开发的工作
3、后期的开发也会更加便利（迭代）


路由：
从源到目的地

Web开发：就是根据URL分配到对应的处理程序
根据程序的配置，比如名字为name，然后相对应的配置组件/其他对象

传统的开发，我们的路径是由“文件夹名字和文件名结合”的，而纯前端的路由开发是不一样的

纯前端的路由：
一般情况下只在一个页面进行交互和跳转（SPA：单页应用）
简而言之就是不刷新页面，根据用户点击来控制和显示页面的输出
就和整个页面是纯用ajax开发的一样

很多公司都是用JSP、php来开发的，页面上很多很多这种JSP、php的标签代码
如果按照上面这种方式开发，那么前端只能切图

SPA开发就是后端提供接口，前端直接通过接口调用和渲染，在这个时候页面没有了后端的渲染，而交给了前端，前端来通过接口渲染数据

直接通过后端渲染是1步操作
而交给前端，首先前端拿到数据，接下来解析数据，最后渲染到页面

优点：
1、职责变的更加清晰
2、开发更加便利
3、体验更好，在移动端的体验和速度都更好

弊端：
1、不利于SEO（搜索引擎优化）
2、渲染速度会比服务端渲染（SSR）要慢
3、数据前端处理起来很麻烦，后端也很麻烦

解决速度问题：
SSR：服务端渲染，这块内容是咱们在开发时非常重要的东西，在外称之为“直出”，首屏渲染

一般情况下会使用Node来做开发：
Node是后端，此时后端在前端手上，而用Node可以控制页面是服务端渲染还是单页应用式的渲染

路由和Iframe区别：
vue路由：
1、不进行页面任何刷新
2、他不需要指定URL

iframe：
1、通过URL刷新页面
2、需要指定














